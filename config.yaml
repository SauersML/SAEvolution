simulation:
  num_generations: 10
  population_size: 6

agent:
  model_id: 'meta-llama/Llama-3.3-70B-Instruct'
  initial_wealth: 30.0
  initial_genome: {}

evolution:
  learning_rate: 0.05
  num_winning_features: 3
  num_losing_features: 3
  contrast_top_k: 10
  activation_min: -1.0
  activation_max: 1.0
  target_positive: 1.0
  target_negative: -0.5
  update_method: 'increment'

game:
  interaction_turns_per_agent: 3
  betting:
    strategy: 'fixed'
    fixed_amount: 5.0
    min_bet: 1.0
    max_bet_ratio: 0.5
    max_loss_multiplier: 1.0
    max_gain_ratio: 2.0

generation:
  scenario:
    prompt: |
      Generate a two-player game scenario using the following XML-style tags. Your entire output must consist ONLY of these tags and their content, in sequence. Do not include any other text, explanations, or formatting outside of the tags themselves.

      The required tags and their expected content are:

      1.  `<context>...</context>`
          *   Content: Describe the game setting and relevant background information.

      2.  `<roles>...</roles>`
          *   Content: Define the two player roles. For clarity within the content, you may structure this as "Role A: [description for Role A]" and "Role B: [description for Role B]".

      3.  `<objectives>...</objectives>`
          *   Content: Detail what each player or role aims to achieve. The text content *within this tag* MUST include the word 'objective'.

      4.  `<win_criteria>...</win_criteria>`
          *   Content: Explain the conditions under which a player or role wins the game. The text content *within this tag* MUST include the phrase 'win criteria'.

      5.  `<tie_criteria>...</tie_criteria>`
          *   Content: Explain the conditions under which the game results in a tie. If ties are not possible, explicitly state that. The text content *within this tag* MUST include the phrase 'tie criteria'.

      6.  `<proposer_role>...</proposer_role>`
          *   Content: Indicate which role is designated as the proposer or first mover for this game setup. The content of this tag MUST be exactly 'Role A' or 'Role B'.

      Make sure your output is only the sequence of these tags with their content.
    max_tokens: 1000
    temperature: 0.7
  response:
    prompt_template: |
      Scenario:
      {scenario}

      Your Role: {role}

      Conversation History:
      {history}

      {role} (Respond according to your role and objective):
    max_tokens: 150
    temperature: 0.6

adjudicator:
  model_id: 'meta-llama/Llama-3.3-70B-Instruct'
  prompt_template: |
      Analyze the interaction based strictly on the rules and objectives defined in the scenario description.

      Scenario Description:
      {scenario}

      Interaction Transcript:
      {transcript}

      Task: Based ONLY on the scenario's win criteria and the interaction, determine the outcome. Respond with ONLY ONE of the following exact phrases: 'Role A Wins', 'Role B Wins', or 'Tie'.
  max_tokens: 20
  temperature: 0.0

logging:
  log_level: DEBUG
  log_directory: logs

state_saving:
  enabled: True
  interval: 5
  directory: simulation_state

api_retries:
  max_retries: 3
  initial_delay: 1.0
  backoff_factor: 2.0

goodfire:
  api_key_env_var: 'GOODFIRE_API_KEY'
